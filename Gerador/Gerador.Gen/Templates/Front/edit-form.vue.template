<template>

    <form ref="<#classNameLower#>-form-edit" v-on:keyup.enter="executeEdit(model)" novalidate>

        <div class="row">

            <#formFields#>

        </div>

        <button type="button" class="btn btn-outline-default" @click="onBack()">
            <span><i class="fas fa-arrow-left"></i> Voltar</span>
        </button>
        <button type="button" class="btn btn-success float-right" @click="executeEdit(model)">
            <span><i class="fas fa-save"></i> Salvar</span>
        </button>

    </form>


</template>
<script>

    import base from '@/common/mixins/base.js'
    import Api from '@/common/api'

    export default {
        name: "<#classNameLower#>-form-edit",
        mixins: [base],
        props: { id: String },
        data: () => ({

            model: {},

            form: "<#classNameLower#>-form-edit",

        }),
		
        methods: {

            executeEdit(model) {

                if (this.formValidate() == false) return;

                this.showLoading();
                
                new Api('<#classNameLower#>').put(model).then(data => {
                    this.defaultSuccessResult();
                    this.$emit('on-saved', data)
                    this.hideLoading();
                }, err => {
                    this.defaultErrorResult(err);
                    this.hideLoading();
                })
            },

            onBack() {
                this.$emit('on-back')
            }
        },

        mounted() {

            this.showLoading();
                
            new Api('<#classNameLower#>').get({ <#KeyNameCamelCase#>: this.id }).then(_result => {
                this.model = Array.isArray(_result.data || {}) ? _result.data[0] : _result.data;
                this.hideLoading();
            }, err => {
                this.defaultErrorResult(err);
                this.hideLoading();
            })
        }
    };
</script>